/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: /workspaces/isaac_ros-dev/build/cyclonedds/src/tools/ddsperf/ddsperf_types.h
  Source: /workspaces/isaac_ros-dev/src/unitree_ros2/cyclonedds_ws/src/cyclonedds/src/tools/ddsperf/ddsperf_types.idl
  Cyclone DDS: V0.10.5

*****************************************************************/
#ifndef DDSC__WORKSPACES_ISAAC_ROS_DEV_BUILD_CYCLONEDDS_SRC_TOOLS_DDSPERF_DDSPERF_TYPES_H
#define DDSC__WORKSPACES_ISAAC_ROS_DEV_BUILD_CYCLONEDDS_SRC_TOOLS_DDSPERF_DDSPERF_TYPES_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct OneULong
{
  uint32_t seq;
} OneULong;

extern const dds_topic_descriptor_t OneULong_desc;

#define OneULong__alloc() \
((OneULong*) dds_alloc (sizeof (OneULong)));

#define OneULong_free(d,o) \
dds_sample_free ((d), &OneULong_desc, (o))

typedef struct Unkeyed16
{
  uint32_t seq;
  uint8_t baggage[12];
} Unkeyed16;

extern const dds_topic_descriptor_t Unkeyed16_desc;

#define Unkeyed16__alloc() \
((Unkeyed16*) dds_alloc (sizeof (Unkeyed16)));

#define Unkeyed16_free(d,o) \
dds_sample_free ((d), &Unkeyed16_desc, (o))

typedef struct Unkeyed1024
{
  uint32_t seq;
  uint8_t baggage[1020];
} Unkeyed1024;

extern const dds_topic_descriptor_t Unkeyed1024_desc;

#define Unkeyed1024__alloc() \
((Unkeyed1024*) dds_alloc (sizeof (Unkeyed1024)));

#define Unkeyed1024_free(d,o) \
dds_sample_free ((d), &Unkeyed1024_desc, (o))

typedef struct Keyed32
{
  uint32_t seq;
  uint32_t keyval;
  uint8_t baggage[24];
} Keyed32;

extern const dds_topic_descriptor_t Keyed32_desc;

#define Keyed32__alloc() \
((Keyed32*) dds_alloc (sizeof (Keyed32)));

#define Keyed32_free(d,o) \
dds_sample_free ((d), &Keyed32_desc, (o))

typedef struct Keyed256
{
  uint32_t seq;
  uint32_t keyval;
  uint8_t baggage[248];
} Keyed256;

extern const dds_topic_descriptor_t Keyed256_desc;

#define Keyed256__alloc() \
((Keyed256*) dds_alloc (sizeof (Keyed256)));

#define Keyed256_free(d,o) \
dds_sample_free ((d), &Keyed256_desc, (o))

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

typedef struct KeyedSeq
{
  uint32_t seq;
  uint32_t keyval;
  dds_sequence_octet baggage;
} KeyedSeq;

extern const dds_topic_descriptor_t KeyedSeq_desc;

#define KeyedSeq__alloc() \
((KeyedSeq*) dds_alloc (sizeof (KeyedSeq)));

#define KeyedSeq_free(d,o) \
dds_sample_free ((d), &KeyedSeq_desc, (o))

typedef struct CPUStatThread
{
  char * name;
  int32_t u_pct;
  int32_t s_pct;
} CPUStatThread;

#ifndef DDS_SEQUENCE_CPUSTATTHREAD_DEFINED
#define DDS_SEQUENCE_CPUSTATTHREAD_DEFINED
typedef struct dds_sequence_CPUStatThread
{
  uint32_t _maximum;
  uint32_t _length;
  struct CPUStatThread *_buffer;
  bool _release;
} dds_sequence_CPUStatThread;

#define dds_sequence_CPUStatThread__alloc() \
((dds_sequence_CPUStatThread*) dds_alloc (sizeof (dds_sequence_CPUStatThread)));

#define dds_sequence_CPUStatThread_allocbuf(l) \
((struct CPUStatThread *) dds_alloc ((l) * sizeof (struct CPUStatThread)))
#endif /* DDS_SEQUENCE_CPUSTATTHREAD_DEFINED */

typedef struct CPUStats
{
  char * hostname;
  uint32_t pid;
  double maxrss;
  uint32_t vcsw;
  uint32_t ivcsw;
  bool some_above;
  dds_sequence_CPUStatThread cpu;
} CPUStats;

extern const dds_topic_descriptor_t CPUStats_desc;

#define CPUStats__alloc() \
((CPUStats*) dds_alloc (sizeof (CPUStats)));

#define CPUStats_free(d,o) \
dds_sample_free ((d), &CPUStats_desc, (o))

typedef struct Struct16
{
  uint8_t struct0;
  uint8_t struct1;
  uint8_t struct2;
  uint8_t struct3;
  uint8_t struct4;
  uint8_t struct5;
  uint8_t struct6;
  uint8_t struct7;
  uint8_t struct8;
  uint8_t struct9;
  uint8_t structa;
  uint8_t structb;
  uint8_t structc;
  uint8_t structd;
  uint8_t structe;
  uint8_t structf;
  int64_t junk;
  uint32_t seq;
  uint32_t keyval;
} Struct16;

extern const dds_topic_descriptor_t Struct16_desc;

#define Struct16__alloc() \
((Struct16*) dds_alloc (sizeof (Struct16)));

#define Struct16_free(d,o) \
dds_sample_free ((d), &Struct16_desc, (o))

typedef struct Struct256
{
  struct Struct16 struct160;
  struct Struct16 struct161;
  struct Struct16 struct162;
  struct Struct16 struct163;
  struct Struct16 struct164;
  struct Struct16 struct165;
  struct Struct16 struct166;
  struct Struct16 struct167;
  struct Struct16 struct168;
  struct Struct16 struct169;
  struct Struct16 struct16a;
  struct Struct16 struct16b;
  struct Struct16 struct16c;
  struct Struct16 struct16d;
  struct Struct16 struct16e;
  struct Struct16 struct16f;
  int64_t junk;
  uint32_t seq;
  uint32_t keyval;
} Struct256;

extern const dds_topic_descriptor_t Struct256_desc;

#define Struct256__alloc() \
((Struct256*) dds_alloc (sizeof (Struct256)));

#define Struct256_free(d,o) \
dds_sample_free ((d), &Struct256_desc, (o))

typedef struct Struct4k
{
  struct Struct256 struct2560;
  struct Struct256 struct2561;
  struct Struct256 struct2562;
  struct Struct256 struct2563;
  struct Struct256 struct2564;
  struct Struct256 struct2565;
  struct Struct256 struct2566;
  struct Struct256 struct2567;
  struct Struct256 struct2568;
  struct Struct256 struct2569;
  struct Struct256 struct256a;
  struct Struct256 struct256b;
  struct Struct256 struct256c;
  struct Struct256 struct256d;
  struct Struct256 struct256e;
  struct Struct256 struct256f;
  int64_t junk;
  uint32_t seq;
  uint32_t keyval;
} Struct4k;

extern const dds_topic_descriptor_t Struct4k_desc;

#define Struct4k__alloc() \
((Struct4k*) dds_alloc (sizeof (Struct4k)));

#define Struct4k_free(d,o) \
dds_sample_free ((d), &Struct4k_desc, (o))

typedef struct Struct32k
{
  struct Struct4k struct4k0;
  struct Struct4k struct4k1;
  struct Struct4k struct4k2;
  struct Struct4k struct4k3;
  struct Struct4k struct4k4;
  struct Struct4k struct4k5;
  struct Struct4k struct4k6;
  struct Struct4k struct4k7;
  int64_t junk;
  uint32_t seq;
  uint32_t keyval;
} Struct32k;

extern const dds_topic_descriptor_t Struct32k_desc;

#define Struct32k__alloc() \
((Struct32k*) dds_alloc (sizeof (Struct32k)));

#define Struct32k_free(d,o) \
dds_sample_free ((d), &Struct32k_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC__WORKSPACES_ISAAC_ROS_DEV_BUILD_CYCLONEDDS_SRC_TOOLS_DDSPERF_DDSPERF_TYPES_H */
