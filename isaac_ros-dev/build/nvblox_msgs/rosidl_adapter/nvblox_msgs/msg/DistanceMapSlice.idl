// generated from rosidl_adapter/resource/msg.idl.em
// with input from nvblox_msgs/msg/DistanceMapSlice.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Point.idl"
#include "std_msgs/msg/Header.idl"

module nvblox_msgs {
  module msg {
    @verbatim (language="comment", text=
      "A distance map slice is effectively a floating point image where the " "\n"
      "value of each pixel represents the distance in meters to the closest" "\n"
      "surface, in 2 dimensions. Pixels covering space which have not been" "\n"
      "observed in the mapping process are given a sentinal value which" "\n"
      "indicates their unknown state.")
    struct DistanceMapSlice {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "How big each \"pixel\" in the map is in meters." "\n"
        "In other words the side length of each cell.")
      float resolution;

      @verbatim (language="comment", text=
        "Width is along the x axis and height is along the y axis.")
      uint32 width;

      uint32 height;

      @verbatim (language="comment", text=
        "The location of the origin of the distance map slice image." "\n"
        "This point coincides with the upper-left corner of the upper-left most pixel." "\n"
        "The distance map slice is effectively an axis-aligned image, attached to" "\n"
        "this point in the world frame.")
      geometry_msgs::msg::Point origin;

      @verbatim (language="comment", text=
        "Which value is used for \"unknown\" cells." "\n"
        "These cells have not been observed by the camera during the mapping process.")
      float unknown_value;

      @verbatim (language="comment", text=
        "The flattened 2D costmap data. Data is stored as floating point values in meters." "\n"
        "The data is stored row-major such that each row of the image/slice sits contiguous" "\n"
        "in memory.")
      sequence<float> data;
    };
  };
};
